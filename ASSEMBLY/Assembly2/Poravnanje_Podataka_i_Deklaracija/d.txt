
program:     file format elf64-x86-64

SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400318 l    d  .dynstr	0000000000000000              .dynstr
0000000000400358 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400360 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400380 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000004003b0 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004003c8 l    d  .init	0000000000000000              .init
00000000004003e0 l    d  .plt	0000000000000000              .plt
0000000000400400 l    d  .text	0000000000000000              .text
0000000000400614 l    d  .fini	0000000000000000              .fini
0000000000400620 l    d  .rodata	0000000000000000              .rodata
0000000000400628 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000400670 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e10 l    d  .init_array	0000000000000000              .init_array
0000000000600e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e20 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff0 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601020 l    d  .data	0000000000000000              .data
0000000000601030 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000400440 l     F .text	0000000000000000              deregister_tm_clones
0000000000400470 l     F .text	0000000000000000              register_tm_clones
00000000004004b0 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601030 l     O .bss	0000000000000001              completed.7698
0000000000600e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000004004e0 l     F .text	0000000000000000              frame_dummy
0000000000600e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              high.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
000000000040078c l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e18 l       .init_array	0000000000000000              __init_array_end
0000000000600e20 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e10 l       .init_array	0000000000000000              __init_array_start
0000000000400628 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000400610 g     F .text	0000000000000002              __libc_csu_fini
0000000000601020  w      .data	0000000000000000              data_start
0000000000601030 g       .data	0000000000000000              _edata
0000000000400614 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601020 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601028 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400620 g     O .rodata	0000000000000004              _IO_stdin_used
00000000004005a0 g     F .text	0000000000000065              __libc_csu_init
00000000004004e7 g     F .text	0000000000000049              foo
0000000000601038 g       .bss	0000000000000000              _end
0000000000400430 g     F .text	0000000000000002              .hidden _dl_relocate_static_pie
0000000000400400 g     F .text	000000000000002b              _start
0000000000601030 g       .bss	0000000000000000              __bss_start
0000000000400530 g     F .text	0000000000000069              main
0000000000601030 g     O .data	0000000000000000              .hidden __TMC_END__
00000000004003c8 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 03                	add    BYTE PTR [rbx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 02                	add    BYTE PTR [rdx],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 00                	add    BYTE PTR [rax],al
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 6d 7b             	add    BYTE PTR [rbp+0x7b],ch
  400286:	cf                   	iret   
  400287:	07                   	(bad)  
  400288:	c1 24 2d 95 d3 4f cc 	shl    DWORD PTR [rbp*1-0x33b02c6b],0xa3
  40028f:	a3 
  400290:	7c f9                	jl     40028b <_init-0x13d>
  400292:	10                   	.byte 0x10
  400293:	8c                   	.byte 0x8c
  400294:	ba                   	.byte 0xba
  400295:	5d                   	pop    rbp
  400296:	67                   	addr32
  400297:	3e                   	ds

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	12 00                	adc    al,BYTE PTR [rax]
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002fe:	00 00                	add    BYTE PTR [rax],al
  400300:	30 00                	xor    BYTE PTR [rax],al
  400302:	00 00                	add    BYTE PTR [rax],al
  400304:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40031c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  40031e:	73 6f                	jae    40038f <_init-0x39>
  400320:	2e 36 00 70 72       	cs add BYTE PTR ss:[rax+0x72],dh
  400325:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
  40032c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40032d:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400334:	72 74                	jb     4003aa <_init-0x1e>
  400336:	5f                   	pop    rdi
  400337:	6d                   	ins    DWORD PTR es:[rdi],dx
  400338:	61                   	(bad)  
  400339:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
  400340:	43 5f                	rex.XB pop r15
  400342:	32 2e                	xor    ch,BYTE PTR [rsi]
  400344:	32 2e                	xor    ch,BYTE PTR [rsi]
  400346:	35 00 5f 5f 67       	xor    eax,0x675f5f00
  40034b:	6d                   	ins    DWORD PTR es:[rdi],dx
  40034c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40034d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40034e:	5f                   	pop    rdi
  40034f:	73 74                	jae    4003c5 <_init-0x3>
  400351:	61                   	(bad)  
  400352:	72 74                	jb     4003c8 <_init>
  400354:	5f                   	pop    rdi
  400355:	5f                   	pop    rdi
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    BYTE PTR [rax],al
  40035a:	02 00                	add    al,BYTE PTR [rax]
  40035c:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    DWORD PTR [rax],eax
  400362:	01 00                	add    DWORD PTR [rax],eax
  400364:	01 00                	add    DWORD PTR [rax],eax
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	10 00                	adc    BYTE PTR [rax],al
  40036a:	00 00                	add    BYTE PTR [rax],al
  40036c:	00 00                	add    BYTE PTR [rax],al
  40036e:	00 00                	add    BYTE PTR [rax],al
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400378:	24 00                	and    al,0x0
  40037a:	00 00                	add    BYTE PTR [rax],al
  40037c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f0 0f 60 00          	lock punpcklbw mm0,DWORD PTR [rax]
  400384:	00 00                	add    BYTE PTR [rax],al
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	06                   	(bad)  
  400389:	00 00                	add    BYTE PTR [rax],al
  40038b:	00 02                	add    BYTE PTR [rdx],al
	...
  400395:	00 00                	add    BYTE PTR [rax],al
  400397:	00 f8                	add    al,bh
  400399:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  40039c:	00 00                	add    BYTE PTR [rax],al
  40039e:	00 00                	add    BYTE PTR [rax],al
  4003a0:	06                   	(bad)  
  4003a1:	00 00                	add    BYTE PTR [rax],al
  4003a3:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .rela.plt:

00000000004003b0 <.rela.plt>:
  4003b0:	18 10                	sbb    BYTE PTR [rax],dl
  4003b2:	60                   	(bad)  
  4003b3:	00 00                	add    BYTE PTR [rax],al
  4003b5:	00 00                	add    BYTE PTR [rax],al
  4003b7:	00 07                	add    BYTE PTR [rdi],al
  4003b9:	00 00                	add    BYTE PTR [rax],al
  4003bb:	00 01                	add    BYTE PTR [rcx],al
	...

Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    rsp,0x8
  4003cc:	48 8b 05 25 0c 20 00 	mov    rax,QWORD PTR [rip+0x200c25]        # 600ff8 <__gmon_start__>
  4003d3:	48 85 c0             	test   rax,rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	call   rax
  4003da:	48 83 c4 08          	add    rsp,0x8
  4003de:	c3                   	ret    

Disassembly of section .plt:

00000000004003e0 <.plt>:
  4003e0:	ff 35 22 0c 20 00    	push   QWORD PTR [rip+0x200c22]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmp    QWORD PTR [rip+0x200c24]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004003f0 <printf@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmp    QWORD PTR [rip+0x200c22]        # 601018 <printf@GLIBC_2.2.5>
  4003f6:	68 00 00 00 00       	push   0x0
  4003fb:	e9 e0 ff ff ff       	jmp    4003e0 <.plt>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    ebp,ebp
  400402:	49 89 d1             	mov    r9,rdx
  400405:	5e                   	pop    rsi
  400406:	48 89 e2             	mov    rdx,rsp
  400409:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40040d:	50                   	push   rax
  40040e:	54                   	push   rsp
  40040f:	49 c7 c0 10 06 40 00 	mov    r8,0x400610
  400416:	48 c7 c1 a0 05 40 00 	mov    rcx,0x4005a0
  40041d:	48 c7 c7 30 05 40 00 	mov    rdi,0x400530
  400424:	ff 15 c6 0b 20 00    	call   QWORD PTR [rip+0x200bc6]        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000400430 <_dl_relocate_static_pie>:
  400430:	f3 c3                	repz ret 
  400432:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  400439:	00 00 00 
  40043c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400440 <deregister_tm_clones>:
  400440:	55                   	push   rbp
  400441:	b8 30 10 60 00       	mov    eax,0x601030
  400446:	48 3d 30 10 60 00    	cmp    rax,0x601030
  40044c:	48 89 e5             	mov    rbp,rsp
  40044f:	74 17                	je     400468 <deregister_tm_clones+0x28>
  400451:	b8 00 00 00 00       	mov    eax,0x0
  400456:	48 85 c0             	test   rax,rax
  400459:	74 0d                	je     400468 <deregister_tm_clones+0x28>
  40045b:	5d                   	pop    rbp
  40045c:	bf 30 10 60 00       	mov    edi,0x601030
  400461:	ff e0                	jmp    rax
  400463:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  400468:	5d                   	pop    rbp
  400469:	c3                   	ret    
  40046a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400470 <register_tm_clones>:
  400470:	be 30 10 60 00       	mov    esi,0x601030
  400475:	55                   	push   rbp
  400476:	48 81 ee 30 10 60 00 	sub    rsi,0x601030
  40047d:	48 89 e5             	mov    rbp,rsp
  400480:	48 c1 fe 03          	sar    rsi,0x3
  400484:	48 89 f0             	mov    rax,rsi
  400487:	48 c1 e8 3f          	shr    rax,0x3f
  40048b:	48 01 c6             	add    rsi,rax
  40048e:	48 d1 fe             	sar    rsi,1
  400491:	74 15                	je     4004a8 <register_tm_clones+0x38>
  400493:	b8 00 00 00 00       	mov    eax,0x0
  400498:	48 85 c0             	test   rax,rax
  40049b:	74 0b                	je     4004a8 <register_tm_clones+0x38>
  40049d:	5d                   	pop    rbp
  40049e:	bf 30 10 60 00       	mov    edi,0x601030
  4004a3:	ff e0                	jmp    rax
  4004a5:	0f 1f 00             	nop    DWORD PTR [rax]
  4004a8:	5d                   	pop    rbp
  4004a9:	c3                   	ret    
  4004aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004004b0 <__do_global_dtors_aux>:
  4004b0:	80 3d 79 0b 20 00 00 	cmp    BYTE PTR [rip+0x200b79],0x0        # 601030 <__TMC_END__>
  4004b7:	75 17                	jne    4004d0 <__do_global_dtors_aux+0x20>
  4004b9:	55                   	push   rbp
  4004ba:	48 89 e5             	mov    rbp,rsp
  4004bd:	e8 7e ff ff ff       	call   400440 <deregister_tm_clones>
  4004c2:	c6 05 67 0b 20 00 01 	mov    BYTE PTR [rip+0x200b67],0x1        # 601030 <__TMC_END__>
  4004c9:	5d                   	pop    rbp
  4004ca:	c3                   	ret    
  4004cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  4004d0:	f3 c3                	repz ret 
  4004d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  4004d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4004dd:	00 00 00 

00000000004004e0 <frame_dummy>:
  4004e0:	55                   	push   rbp
  4004e1:	48 89 e5             	mov    rbp,rsp
  4004e4:	5d                   	pop    rbp
  4004e5:	eb 89                	jmp    400470 <register_tm_clones>

00000000004004e7 <foo>:
  4004e7:	55                   	push   rbp
  4004e8:	48 89 e5             	mov    rbp,rsp
  4004eb:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
  4004ee:	89 75 d8             	mov    DWORD PTR [rbp-0x28],esi
  4004f1:	89 55 d4             	mov    DWORD PTR [rbp-0x2c],edx
  4004f4:	48 89 c8             	mov    rax,rcx
  4004f7:	44 89 c2             	mov    edx,r8d
  4004fa:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  4004fe:	89 55 c8             	mov    DWORD PTR [rbp-0x38],edx
  400501:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [rbp-0x18],0x1
  400508:	c7 45 ec 02 00 00 00 	mov    DWORD PTR [rbp-0x14],0x2
  40050f:	c7 45 f0 03 00 00 00 	mov    DWORD PTR [rbp-0x10],0x3
  400516:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40051a:	48 89 45 f4          	mov    QWORD PTR [rbp-0xc],rax
  40051e:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
  400521:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  400524:	48 8b 45 f4          	mov    rax,QWORD PTR [rbp-0xc]
  400528:	8b 4d fc             	mov    ecx,DWORD PTR [rbp-0x4]
  40052b:	48 89 ca             	mov    rdx,rcx
  40052e:	5d                   	pop    rbp
  40052f:	c3                   	ret    

0000000000400530 <main>:
  400530:	55                   	push   rbp
  400531:	48 89 e5             	mov    rbp,rsp
  400534:	48 83 ec 20          	sub    rsp,0x20
  400538:	c7 45 ec 0a 00 00 00 	mov    DWORD PTR [rbp-0x14],0xa
  40053f:	c7 45 f0 0b 00 00 00 	mov    DWORD PTR [rbp-0x10],0xb
  400546:	be 0c 00 00 00       	mov    esi,0xc
  40054b:	48 8d 3d d2 00 00 00 	lea    rdi,[rip+0xd2]        # 400624 <_IO_stdin_used+0x4>
  400552:	b8 00 00 00 00       	mov    eax,0x0
  400557:	e8 94 fe ff ff       	call   4003f0 <printf@plt>
  40055c:	c7 45 f4 04 00 00 00 	mov    DWORD PTR [rbp-0xc],0x4
  400563:	c7 45 f8 05 00 00 00 	mov    DWORD PTR [rbp-0x8],0x5
  40056a:	c7 45 fc 06 00 00 00 	mov    DWORD PTR [rbp-0x4],0x6
  400571:	48 8b 45 f4          	mov    rax,QWORD PTR [rbp-0xc]
  400575:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  400578:	48 89 c1             	mov    rcx,rax
  40057b:	41 89 d0             	mov    r8d,edx
  40057e:	ba 03 00 00 00       	mov    edx,0x3
  400583:	be 02 00 00 00       	mov    esi,0x2
  400588:	bf 01 00 00 00       	mov    edi,0x1
  40058d:	e8 55 ff ff ff       	call   4004e7 <foo>
  400592:	b8 00 00 00 00       	mov    eax,0x0
  400597:	c9                   	leave  
  400598:	c3                   	ret    
  400599:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000004005a0 <__libc_csu_init>:
  4005a0:	41 57                	push   r15
  4005a2:	41 56                	push   r14
  4005a4:	49 89 d7             	mov    r15,rdx
  4005a7:	41 55                	push   r13
  4005a9:	41 54                	push   r12
  4005ab:	4c 8d 25 5e 08 20 00 	lea    r12,[rip+0x20085e]        # 600e10 <__frame_dummy_init_array_entry>
  4005b2:	55                   	push   rbp
  4005b3:	48 8d 2d 5e 08 20 00 	lea    rbp,[rip+0x20085e]        # 600e18 <__init_array_end>
  4005ba:	53                   	push   rbx
  4005bb:	41 89 fd             	mov    r13d,edi
  4005be:	49 89 f6             	mov    r14,rsi
  4005c1:	4c 29 e5             	sub    rbp,r12
  4005c4:	48 83 ec 08          	sub    rsp,0x8
  4005c8:	48 c1 fd 03          	sar    rbp,0x3
  4005cc:	e8 f7 fd ff ff       	call   4003c8 <_init>
  4005d1:	48 85 ed             	test   rbp,rbp
  4005d4:	74 20                	je     4005f6 <__libc_csu_init+0x56>
  4005d6:	31 db                	xor    ebx,ebx
  4005d8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  4005df:	00 
  4005e0:	4c 89 fa             	mov    rdx,r15
  4005e3:	4c 89 f6             	mov    rsi,r14
  4005e6:	44 89 ef             	mov    edi,r13d
  4005e9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  4005ed:	48 83 c3 01          	add    rbx,0x1
  4005f1:	48 39 dd             	cmp    rbp,rbx
  4005f4:	75 ea                	jne    4005e0 <__libc_csu_init+0x40>
  4005f6:	48 83 c4 08          	add    rsp,0x8
  4005fa:	5b                   	pop    rbx
  4005fb:	5d                   	pop    rbp
  4005fc:	41 5c                	pop    r12
  4005fe:	41 5d                	pop    r13
  400600:	41 5e                	pop    r14
  400602:	41 5f                	pop    r15
  400604:	c3                   	ret    
  400605:	90                   	nop
  400606:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40060d:	00 00 00 

0000000000400610 <__libc_csu_fini>:
  400610:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400614 <_fini>:
  400614:	48 83 ec 08          	sub    rsp,0x8
  400618:	48 83 c4 08          	add    rsp,0x8
  40061c:	c3                   	ret    

Disassembly of section .rodata:

0000000000400620 <_IO_stdin_used>:
  400620:	01 00                	add    DWORD PTR [rax],eax
  400622:	02 00                	add    al,BYTE PTR [rax]
  400624:	25                   	.byte 0x25
  400625:	6c                   	ins    BYTE PTR es:[rdi],dx
  400626:	64                   	fs
	...

Disassembly of section .eh_frame_hdr:

0000000000400628 <__GNU_EH_FRAME_HDR>:
  400628:	01 1b                	add    DWORD PTR [rbx],ebx
  40062a:	03 3b                	add    edi,DWORD PTR [rbx]
  40062c:	44 00 00             	add    BYTE PTR [rax],r8b
  40062f:	00 07                	add    BYTE PTR [rdi],al
  400631:	00 00                	add    BYTE PTR [rax],al
  400633:	00 b8 fd ff ff a0    	add    BYTE PTR [rax-0x5f000003],bh
  400639:	00 00                	add    BYTE PTR [rax],al
  40063b:	00 d8                	add    al,bl
  40063d:	fd                   	std    
  40063e:	ff                   	(bad)  
  40063f:	ff 60 00             	jmp    QWORD PTR [rax+0x0]
  400642:	00 00                	add    BYTE PTR [rax],al
  400644:	08 fe                	or     dh,bh
  400646:	ff                   	(bad)  
  400647:	ff 8c 00 00 00 bf fe 	dec    DWORD PTR [rax+rax*1-0x1410000]
  40064e:	ff                   	(bad)  
  40064f:	ff c8                	dec    eax
  400651:	00 00                	add    BYTE PTR [rax],al
  400653:	00 08                	add    BYTE PTR [rax],cl
  400655:	ff                   	(bad)  
  400656:	ff                   	(bad)  
  400657:	ff                   	(bad)  
  400658:	e8 00 00 00 78       	call   7840065d <_end+0x77dff625>
  40065d:	ff                   	(bad)  
  40065e:	ff                   	(bad)  
  40065f:	ff 08                	dec    DWORD PTR [rax]
  400661:	01 00                	add    DWORD PTR [rax],eax
  400663:	00 e8                	add    al,ch
  400665:	ff                   	(bad)  
  400666:	ff                   	(bad)  
  400667:	ff 50 01             	call   QWORD PTR [rax+0x1]
	...

Disassembly of section .eh_frame:

0000000000400670 <__FRAME_END__-0x11c>:
  400670:	14 00                	adc    al,0x0
  400672:	00 00                	add    BYTE PTR [rax],al
  400674:	00 00                	add    BYTE PTR [rax],al
  400676:	00 00                	add    BYTE PTR [rax],al
  400678:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  40067b:	00 01                	add    BYTE PTR [rcx],al
  40067d:	78 10                	js     40068f <__GNU_EH_FRAME_HDR+0x67>
  40067f:	01 1b                	add    DWORD PTR [rbx],ebx
  400681:	0c 07                	or     al,0x7
  400683:	08 90 01 07 10 10    	or     BYTE PTR [rax+0x10100701],dl
  400689:	00 00                	add    BYTE PTR [rax],al
  40068b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40068e:	00 00                	add    BYTE PTR [rax],al
  400690:	70 fd                	jo     40068f <__GNU_EH_FRAME_HDR+0x67>
  400692:	ff                   	(bad)  
  400693:	ff 2b                	jmp    FWORD PTR [rbx]
  400695:	00 00                	add    BYTE PTR [rax],al
  400697:	00 00                	add    BYTE PTR [rax],al
  400699:	00 00                	add    BYTE PTR [rax],al
  40069b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40069e:	00 00                	add    BYTE PTR [rax],al
  4006a0:	00 00                	add    BYTE PTR [rax],al
  4006a2:	00 00                	add    BYTE PTR [rax],al
  4006a4:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4006a7:	00 01                	add    BYTE PTR [rcx],al
  4006a9:	78 10                	js     4006bb <__GNU_EH_FRAME_HDR+0x93>
  4006ab:	01 1b                	add    DWORD PTR [rbx],ebx
  4006ad:	0c 07                	or     al,0x7
  4006af:	08 90 01 00 00 10    	or     BYTE PTR [rax+0x10000001],dl
  4006b5:	00 00                	add    BYTE PTR [rax],al
  4006b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4006ba:	00 00                	add    BYTE PTR [rax],al
  4006bc:	74 fd                	je     4006bb <__GNU_EH_FRAME_HDR+0x93>
  4006be:	ff                   	(bad)  
  4006bf:	ff 02                	inc    DWORD PTR [rdx]
  4006c1:	00 00                	add    BYTE PTR [rax],al
  4006c3:	00 00                	add    BYTE PTR [rax],al
  4006c5:	00 00                	add    BYTE PTR [rax],al
  4006c7:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  4006ca:	00 00                	add    BYTE PTR [rax],al
  4006cc:	30 00                	xor    BYTE PTR [rax],al
  4006ce:	00 00                	add    BYTE PTR [rax],al
  4006d0:	10 fd                	adc    ch,bh
  4006d2:	ff                   	(bad)  
  4006d3:	ff 20                	jmp    QWORD PTR [rax]
  4006d5:	00 00                	add    BYTE PTR [rax],al
  4006d7:	00 00                	add    BYTE PTR [rax],al
  4006d9:	0e                   	(bad)  
  4006da:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  4006dd:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  4006e0:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  4006e3:	80 00 3f             	add    BYTE PTR [rax],0x3f
  4006e6:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  4006e8:	2a 33                	sub    dh,BYTE PTR [rbx]
  4006ea:	24 22                	and    al,0x22
  4006ec:	00 00                	add    BYTE PTR [rax],al
  4006ee:	00 00                	add    BYTE PTR [rax],al
  4006f0:	1c 00                	sbb    al,0x0
  4006f2:	00 00                	add    BYTE PTR [rax],al
  4006f4:	58                   	pop    rax
  4006f5:	00 00                	add    BYTE PTR [rax],al
  4006f7:	00 ef                	add    bh,ch
  4006f9:	fd                   	std    
  4006fa:	ff                   	(bad)  
  4006fb:	ff 49 00             	dec    DWORD PTR [rcx+0x0]
  4006fe:	00 00                	add    BYTE PTR [rax],al
  400700:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400703:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400709:	02 44 0c 07          	add    al,BYTE PTR [rsp+rcx*1+0x7]
  40070d:	08 00                	or     BYTE PTR [rax],al
  40070f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400712:	00 00                	add    BYTE PTR [rax],al
  400714:	78 00                	js     400716 <__GNU_EH_FRAME_HDR+0xee>
  400716:	00 00                	add    BYTE PTR [rax],al
  400718:	18 fe                	sbb    dh,bh
  40071a:	ff                   	(bad)  
  40071b:	ff 69 00             	jmp    FWORD PTR [rcx+0x0]
  40071e:	00 00                	add    BYTE PTR [rax],al
  400720:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400723:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400729:	02 64 0c 07          	add    ah,BYTE PTR [rsp+rcx*1+0x7]
  40072d:	08 00                	or     BYTE PTR [rax],al
  40072f:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  400733:	00 98 00 00 00 68    	add    BYTE PTR [rax+0x68000000],bl
  400739:	fe                   	(bad)  
  40073a:	ff                   	(bad)  
  40073b:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  40073e:	00 00                	add    BYTE PTR [rax],al
  400740:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  400743:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400749:	8e 03                	mov    es,WORD PTR [rbx]
  40074b:	45 0e                	rex.RB (bad) 
  40074d:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  400753:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867015a1 <_end+0xffffffff86100569>
  400759:	06                   	(bad)  
  40075a:	48 0e                	rex.W (bad) 
  40075c:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  400762:	72 0e                	jb     400772 <__GNU_EH_FRAME_HDR+0x14a>
  400764:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  400767:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  40076a:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  40076d:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400770:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  400773:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  400776:	08 00                	or     BYTE PTR [rax],al
  400778:	10 00                	adc    BYTE PTR [rax],al
  40077a:	00 00                	add    BYTE PTR [rax],al
  40077c:	e0 00                	loopne 40077e <__GNU_EH_FRAME_HDR+0x156>
  40077e:	00 00                	add    BYTE PTR [rax],al
  400780:	90                   	nop
  400781:	fe                   	(bad)  
  400782:	ff                   	(bad)  
  400783:	ff 02                	inc    DWORD PTR [rdx]
  400785:	00 00                	add    BYTE PTR [rax],al
  400787:	00 00                	add    BYTE PTR [rax],al
  400789:	00 00                	add    BYTE PTR [rax],al
	...

000000000040078c <__FRAME_END__>:
  40078c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
  600e10:	e0 04                	loopne 600e16 <__frame_dummy_init_array_entry+0x6>
  600e12:	40 00 00             	add    BYTE PTR [rax],al
  600e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	b0 04                	mov    al,0x4
  600e1a:	40 00 00             	add    BYTE PTR [rax],al
  600e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    DWORD PTR [rax],eax
  600e22:	00 00                	add    BYTE PTR [rax],al
  600e24:	00 00                	add    BYTE PTR [rax],al
  600e26:	00 00                	add    BYTE PTR [rax],al
  600e28:	01 00                	add    DWORD PTR [rax],eax
  600e2a:	00 00                	add    BYTE PTR [rax],al
  600e2c:	00 00                	add    BYTE PTR [rax],al
  600e2e:	00 00                	add    BYTE PTR [rax],al
  600e30:	0c 00                	or     al,0x0
  600e32:	00 00                	add    BYTE PTR [rax],al
  600e34:	00 00                	add    BYTE PTR [rax],al
  600e36:	00 00                	add    BYTE PTR [rax],al
  600e38:	c8 03 40 00          	enter  0x4003,0x0
  600e3c:	00 00                	add    BYTE PTR [rax],al
  600e3e:	00 00                	add    BYTE PTR [rax],al
  600e40:	0d 00 00 00 00       	or     eax,0x0
  600e45:	00 00                	add    BYTE PTR [rax],al
  600e47:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
  600e4a:	40 00 00             	add    BYTE PTR [rax],al
  600e4d:	00 00                	add    BYTE PTR [rax],al
  600e4f:	00 19                	add    BYTE PTR [rcx],bl
  600e51:	00 00                	add    BYTE PTR [rax],al
  600e53:	00 00                	add    BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
  600e57:	00 10                	add    BYTE PTR [rax],dl
  600e59:	0e                   	(bad)  
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
  600e5f:	00 1b                	add    BYTE PTR [rbx],bl
  600e61:	00 00                	add    BYTE PTR [rax],al
  600e63:	00 00                	add    BYTE PTR [rax],al
  600e65:	00 00                	add    BYTE PTR [rax],al
  600e67:	00 08                	add    BYTE PTR [rax],cl
  600e69:	00 00                	add    BYTE PTR [rax],al
  600e6b:	00 00                	add    BYTE PTR [rax],al
  600e6d:	00 00                	add    BYTE PTR [rax],al
  600e6f:	00 1a                	add    BYTE PTR [rdx],bl
  600e71:	00 00                	add    BYTE PTR [rax],al
  600e73:	00 00                	add    BYTE PTR [rax],al
  600e75:	00 00                	add    BYTE PTR [rax],al
  600e77:	00 18                	add    BYTE PTR [rax],bl
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    BYTE PTR [rax],al
  600e7d:	00 00                	add    BYTE PTR [rax],al
  600e7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600e82:	00 00                	add    BYTE PTR [rax],al
  600e84:	00 00                	add    BYTE PTR [rax],al
  600e86:	00 00                	add    BYTE PTR [rax],al
  600e88:	08 00                	or     BYTE PTR [rax],al
  600e8a:	00 00                	add    BYTE PTR [rax],al
  600e8c:	00 00                	add    BYTE PTR [rax],al
  600e8e:	00 00                	add    BYTE PTR [rax],al
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600e95:	00 00                	add    BYTE PTR [rax],al
  600e97:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 18                	add    BYTE PTR [rax],bl
  600ea9:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eac:	00 00                	add    BYTE PTR [rax],al
  600eae:	00 00                	add    BYTE PTR [rax],al
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    BYTE PTR [rax],al
  600eb3:	00 00                	add    BYTE PTR [rax],al
  600eb5:	00 00                	add    BYTE PTR [rax],al
  600eb7:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 0a                	add    BYTE PTR [rdx],cl
  600ec1:	00 00                	add    BYTE PTR [rax],al
  600ec3:	00 00                	add    BYTE PTR [rax],al
  600ec5:	00 00                	add    BYTE PTR [rax],al
  600ec7:	00 3f                	add    BYTE PTR [rdi],bh
  600ec9:	00 00                	add    BYTE PTR [rax],al
  600ecb:	00 00                	add    BYTE PTR [rax],al
  600ecd:	00 00                	add    BYTE PTR [rax],al
  600ecf:	00 0b                	add    BYTE PTR [rbx],cl
  600ed1:	00 00                	add    BYTE PTR [rax],al
  600ed3:	00 00                	add    BYTE PTR [rax],al
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 18                	add    BYTE PTR [rax],bl
  600ed9:	00 00                	add    BYTE PTR [rax],al
  600edb:	00 00                	add    BYTE PTR [rax],al
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600ee5 <_DYNAMIC+0xc5>
	...
  600eed:	00 00                	add    BYTE PTR [rax],al
  600eef:	00 03                	add    BYTE PTR [rbx],al
	...
  600ef9:	10 60 00             	adc    BYTE PTR [rax+0x0],ah
  600efc:	00 00                	add    BYTE PTR [rax],al
  600efe:	00 00                	add    BYTE PTR [rax],al
  600f00:	02 00                	add    al,BYTE PTR [rax]
  600f02:	00 00                	add    BYTE PTR [rax],al
  600f04:	00 00                	add    BYTE PTR [rax],al
  600f06:	00 00                	add    BYTE PTR [rax],al
  600f08:	18 00                	sbb    BYTE PTR [rax],al
  600f0a:	00 00                	add    BYTE PTR [rax],al
  600f0c:	00 00                	add    BYTE PTR [rax],al
  600f0e:	00 00                	add    BYTE PTR [rax],al
  600f10:	14 00                	adc    al,0x0
  600f12:	00 00                	add    BYTE PTR [rax],al
  600f14:	00 00                	add    BYTE PTR [rax],al
  600f16:	00 00                	add    BYTE PTR [rax],al
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    BYTE PTR [rax],al
  600f1b:	00 00                	add    BYTE PTR [rax],al
  600f1d:	00 00                	add    BYTE PTR [rax],al
  600f1f:	00 17                	add    BYTE PTR [rdi],dl
  600f21:	00 00                	add    BYTE PTR [rax],al
  600f23:	00 00                	add    BYTE PTR [rax],al
  600f25:	00 00                	add    BYTE PTR [rax],al
  600f27:	00 b0 03 40 00 00    	add    BYTE PTR [rax+0x4003],dh
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 07                	add    BYTE PTR [rdi],al
  600f31:	00 00                	add    BYTE PTR [rax],al
  600f33:	00 00                	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 80 03 40 00 00    	add    BYTE PTR [rax+0x4003],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 08                	add    BYTE PTR [rax],cl
  600f41:	00 00                	add    BYTE PTR [rax],al
  600f43:	00 00                	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 30                	add    BYTE PTR [rax],dh
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 09                	add    BYTE PTR [rcx],cl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 18                	add    BYTE PTR [rax],bl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 fe                	add    dh,bh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600f6a:	40 00 00             	add    BYTE PTR [rax],al
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 ff                	add    bh,bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 01                	add    BYTE PTR [rcx],al
  600f79:	00 00                	add    BYTE PTR [rax],al
  600f7b:	00 00                	add    BYTE PTR [rax],al
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 f0                	add    al,dh
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 58 03             	add    BYTE PTR [rax+0x3],bl
  600f8a:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    BYTE PTR [rsi],cl
  601002:	60                   	(bad)  
	...
  601017:	00 f6                	add    dh,dh
  601019:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  60101c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601030 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400350>
   a:	74 75                	je     81 <_init-0x400347>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 35 2e 30 2d 33    	cs xor eax,0x332d302e
  14:	75 62                	jne    78 <_init-0x400350>
  16:	75 6e                	jne    86 <_init-0x400342>
  18:	74 75                	je     8f <_init-0x400339>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	38 2e                	cmp    BYTE PTR [rsi],ch
  1f:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  22:	20 37                	and    BYTE PTR [rdi],dh
  24:	2e                   	cs
  25:	35                   	.byte 0x35
  26:	2e 30 00             	xor    BYTE PTR cs:[rax],al
