
program:     file format elf64-x86-64

SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002b8 l    d  .dynsym	0000000000000000              .dynsym
0000000000400300 l    d  .dynstr	0000000000000000              .dynstr
0000000000400338 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400340 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400360 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400390 l    d  .init	0000000000000000              .init
00000000004003b0 l    d  .text	0000000000000000              .text
0000000000400554 l    d  .fini	0000000000000000              .fini
0000000000400560 l    d  .rodata	0000000000000000              .rodata
0000000000400564 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
00000000004005a0 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e50 l    d  .init_array	0000000000000000              .init_array
0000000000600e58 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e60 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff0 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601018 l    d  .data	0000000000000000              .data
0000000000601028 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000004003f0 l     F .text	0000000000000000              deregister_tm_clones
0000000000400420 l     F .text	0000000000000000              register_tm_clones
0000000000400460 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601028 l     O .bss	0000000000000001              completed.7697
0000000000600e58 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000400490 l     F .text	0000000000000000              frame_dummy
0000000000600e50 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              main2.c
0000000000000000 l    df *ABS*	0000000000000000              funkcija.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000400694 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e58 l       .init_array	0000000000000000              __init_array_end
0000000000600e60 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e50 l       .init_array	0000000000000000              __init_array_start
0000000000400564 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000400550 g     F .text	0000000000000002              __libc_csu_fini
0000000000601018  w      .data	0000000000000000              data_start
0000000000601028 g       .data	0000000000000000              _edata
0000000000400554 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601018 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601020 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400560 g     O .rodata	0000000000000004              _IO_stdin_used
00000000004004e0 g     F .text	0000000000000065              __libc_csu_init
00000000004004bc g     F .text	0000000000000017              funkcija
0000000000601030 g       .bss	0000000000000000              _end
00000000004003e0 g     F .text	0000000000000002              .hidden _dl_relocate_static_pie
00000000004003b0 g     F .text	000000000000002b              _start
0000000000601028 g       .bss	0000000000000000              __bss_start
0000000000400497 g     F .text	0000000000000025              main
0000000000601028 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000400390 g     F .init	0000000000000000              _init



Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x11b>
  400248:	78 38                	js     400282 <_init-0x10e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 03                	add    BYTE PTR [rbx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 02                	add    BYTE PTR [rdx],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 00                	add    BYTE PTR [rax],al
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 50 d9             	add    BYTE PTR [rax-0x27],dl
  400286:	5f                   	pop    rdi
  400287:	92                   	xchg   edx,eax
  400288:	fe                   	(bad)  
  400289:	a3 da 78 bf 78 51 a9 	movabs ds:0x4d49a95178bf78da,eax
  400290:	49 4d 
  400292:	55                   	push   rbp
  400293:	f9                   	stc    
  400294:	22 78 4e             	and    bh,BYTE PTR [rax+0x4e]
  400297:	f2                   	repnz

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     eax,DWORD PTR [rax]
  4002d2:	00 00                	add    BYTE PTR [rax],al
  4002d4:	12 00                	adc    al,BYTE PTR [rax]
	...
  4002e6:	00 00                	add    BYTE PTR [rax],al
  4002e8:	29 00                	sub    DWORD PTR [rax],eax
  4002ea:	00 00                	add    BYTE PTR [rax],al
  4002ec:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000400300 <.dynstr>:
  400300:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  400304:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  400306:	73 6f                	jae    400377 <_init-0x19>
  400308:	2e 36 00 5f 5f       	cs add BYTE PTR ss:[rdi+0x5f],bl
  40030d:	6c                   	ins    BYTE PTR es:[rdi],dx
  40030e:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400315:	72 74                	jb     40038b <_init-0x5>
  400317:	5f                   	pop    rdi
  400318:	6d                   	ins    DWORD PTR es:[rdi],dx
  400319:	61                   	(bad)  
  40031a:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
  400321:	43 5f                	rex.XB pop r15
  400323:	32 2e                	xor    ch,BYTE PTR [rsi]
  400325:	32 2e                	xor    ch,BYTE PTR [rsi]
  400327:	35 00 5f 5f 67       	xor    eax,0x675f5f00
  40032c:	6d                   	ins    DWORD PTR es:[rdi],dx
  40032d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40032e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  40032f:	5f                   	pop    rdi
  400330:	73 74                	jae    4003a6 <_init+0x16>
  400332:	61                   	(bad)  
  400333:	72 74                	jb     4003a9 <_init+0x19>
  400335:	5f                   	pop    rdi
  400336:	5f                   	pop    rdi
	...

Disassembly of section .gnu.version:

0000000000400338 <.gnu.version>:
  400338:	00 00                	add    BYTE PTR [rax],al
  40033a:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .gnu.version_r:

0000000000400340 <.gnu.version_r>:
  400340:	01 00                	add    DWORD PTR [rax],eax
  400342:	01 00                	add    DWORD PTR [rax],eax
  400344:	01 00                	add    DWORD PTR [rax],eax
  400346:	00 00                	add    BYTE PTR [rax],al
  400348:	10 00                	adc    BYTE PTR [rax],al
  40034a:	00 00                	add    BYTE PTR [rax],al
  40034c:	00 00                	add    BYTE PTR [rax],al
  40034e:	00 00                	add    BYTE PTR [rax],al
  400350:	75 1a                	jne    40036c <_init-0x24>
  400352:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  400358:	1d 00 00 00 00       	sbb    eax,0x0
  40035d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000400360 <.rela.dyn>:
  400360:	f0 0f 60 00          	lock punpcklbw mm0,DWORD PTR [rax]
  400364:	00 00                	add    BYTE PTR [rax],al
  400366:	00 00                	add    BYTE PTR [rax],al
  400368:	06                   	(bad)  
  400369:	00 00                	add    BYTE PTR [rax],al
  40036b:	00 01                	add    BYTE PTR [rcx],al
	...
  400375:	00 00                	add    BYTE PTR [rax],al
  400377:	00 f8                	add    al,bh
  400379:	0f 60 00             	punpcklbw mm0,DWORD PTR [rax]
  40037c:	00 00                	add    BYTE PTR [rax],al
  40037e:	00 00                	add    BYTE PTR [rax],al
  400380:	06                   	(bad)  
  400381:	00 00                	add    BYTE PTR [rax],al
  400383:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .init:

0000000000400390 <_init>:
  400390:	48 83 ec 08          	sub    rsp,0x8
  400394:	48 8b 05 5d 0c 20 00 	mov    rax,QWORD PTR [rip+0x200c5d]        # 600ff8 <__gmon_start__>
  40039b:	48 85 c0             	test   rax,rax
  40039e:	74 02                	je     4003a2 <_init+0x12>
  4003a0:	ff d0                	call   rax
  4003a2:	48 83 c4 08          	add    rsp,0x8
  4003a6:	c3                   	ret    

Disassembly of section .text:

00000000004003b0 <_start>:
  4003b0:	31 ed                	xor    ebp,ebp
  4003b2:	49 89 d1             	mov    r9,rdx
  4003b5:	5e                   	pop    rsi
  4003b6:	48 89 e2             	mov    rdx,rsp
  4003b9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4003bd:	50                   	push   rax
  4003be:	54                   	push   rsp
  4003bf:	49 c7 c0 50 05 40 00 	mov    r8,0x400550
  4003c6:	48 c7 c1 e0 04 40 00 	mov    rcx,0x4004e0
  4003cd:	48 c7 c7 97 04 40 00 	mov    rdi,0x400497
  4003d4:	ff 15 16 0c 20 00    	call   QWORD PTR [rip+0x200c16]        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4003da:	f4                   	hlt    
  4003db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000004003e0 <_dl_relocate_static_pie>:
  4003e0:	f3 c3                	repz ret 
  4003e2:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4003e9:	00 00 00 
  4003ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000004003f0 <deregister_tm_clones>:
  4003f0:	55                   	push   rbp
  4003f1:	b8 28 10 60 00       	mov    eax,0x601028
  4003f6:	48 3d 28 10 60 00    	cmp    rax,0x601028
  4003fc:	48 89 e5             	mov    rbp,rsp
  4003ff:	74 17                	je     400418 <deregister_tm_clones+0x28>
  400401:	b8 00 00 00 00       	mov    eax,0x0
  400406:	48 85 c0             	test   rax,rax
  400409:	74 0d                	je     400418 <deregister_tm_clones+0x28>
  40040b:	5d                   	pop    rbp
  40040c:	bf 28 10 60 00       	mov    edi,0x601028
  400411:	ff e0                	jmp    rax
  400413:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  400418:	5d                   	pop    rbp
  400419:	c3                   	ret    
  40041a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400420 <register_tm_clones>:
  400420:	be 28 10 60 00       	mov    esi,0x601028
  400425:	55                   	push   rbp
  400426:	48 81 ee 28 10 60 00 	sub    rsi,0x601028
  40042d:	48 89 e5             	mov    rbp,rsp
  400430:	48 c1 fe 03          	sar    rsi,0x3
  400434:	48 89 f0             	mov    rax,rsi
  400437:	48 c1 e8 3f          	shr    rax,0x3f
  40043b:	48 01 c6             	add    rsi,rax
  40043e:	48 d1 fe             	sar    rsi,1
  400441:	74 15                	je     400458 <register_tm_clones+0x38>
  400443:	b8 00 00 00 00       	mov    eax,0x0
  400448:	48 85 c0             	test   rax,rax
  40044b:	74 0b                	je     400458 <register_tm_clones+0x38>
  40044d:	5d                   	pop    rbp
  40044e:	bf 28 10 60 00       	mov    edi,0x601028
  400453:	ff e0                	jmp    rax
  400455:	0f 1f 00             	nop    DWORD PTR [rax]
  400458:	5d                   	pop    rbp
  400459:	c3                   	ret    
  40045a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400460 <__do_global_dtors_aux>:
  400460:	80 3d c1 0b 20 00 00 	cmp    BYTE PTR [rip+0x200bc1],0x0        # 601028 <__TMC_END__>
  400467:	75 17                	jne    400480 <__do_global_dtors_aux+0x20>
  400469:	55                   	push   rbp
  40046a:	48 89 e5             	mov    rbp,rsp
  40046d:	e8 7e ff ff ff       	call   4003f0 <deregister_tm_clones>
  400472:	c6 05 af 0b 20 00 01 	mov    BYTE PTR [rip+0x200baf],0x1        # 601028 <__TMC_END__>
  400479:	5d                   	pop    rbp
  40047a:	c3                   	ret    
  40047b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  400480:	f3 c3                	repz ret 
  400482:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400486:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40048d:	00 00 00 

0000000000400490 <frame_dummy>:
  400490:	55                   	push   rbp
  400491:	48 89 e5             	mov    rbp,rsp
  400494:	5d                   	pop    rbp
  400495:	eb 89                	jmp    400420 <register_tm_clones>

0000000000400497 <main>:
  400497:	55                   	push   rbp
  400498:	48 89 e5             	mov    rbp,rsp
  40049b:	48 83 ec 10          	sub    rsp,0x10
  40049f:	66 c7 45 fc 01 00    	mov    WORD PTR [rbp-0x4],0x1
  4004a5:	66 c7 45 fe 02 00    	mov    WORD PTR [rbp-0x2],0x2
  4004ab:	b8 00 00 00 00       	mov    eax,0x0
  4004b0:	e8 07 00 00 00       	call   4004bc <funkcija>
  4004b5:	b8 00 00 00 00       	mov    eax,0x0
  4004ba:	c9                   	leave  
  4004bb:	c3                   	ret    

00000000004004bc <funkcija>:
  4004bc:	55                   	push   rbp
  4004bd:	48 89 e5             	mov    rbp,rsp
  4004c0:	66 c7 45 fc 01 00    	mov    WORD PTR [rbp-0x4],0x1
  4004c6:	66 c7 45 fe 02 00    	mov    WORD PTR [rbp-0x2],0x2
  4004cc:	b8 00 00 00 00       	mov    eax,0x0
  4004d1:	5d                   	pop    rbp
  4004d2:	c3                   	ret    
  4004d3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4004da:	00 00 00 
  4004dd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000004004e0 <__libc_csu_init>:
  4004e0:	41 57                	push   r15
  4004e2:	41 56                	push   r14
  4004e4:	49 89 d7             	mov    r15,rdx
  4004e7:	41 55                	push   r13
  4004e9:	41 54                	push   r12
  4004eb:	4c 8d 25 5e 09 20 00 	lea    r12,[rip+0x20095e]        # 600e50 <__frame_dummy_init_array_entry>
  4004f2:	55                   	push   rbp
  4004f3:	48 8d 2d 5e 09 20 00 	lea    rbp,[rip+0x20095e]        # 600e58 <__init_array_end>
  4004fa:	53                   	push   rbx
  4004fb:	41 89 fd             	mov    r13d,edi
  4004fe:	49 89 f6             	mov    r14,rsi
  400501:	4c 29 e5             	sub    rbp,r12
  400504:	48 83 ec 08          	sub    rsp,0x8
  400508:	48 c1 fd 03          	sar    rbp,0x3
  40050c:	e8 7f fe ff ff       	call   400390 <_init>
  400511:	48 85 ed             	test   rbp,rbp
  400514:	74 20                	je     400536 <__libc_csu_init+0x56>
  400516:	31 db                	xor    ebx,ebx
  400518:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  40051f:	00 
  400520:	4c 89 fa             	mov    rdx,r15
  400523:	4c 89 f6             	mov    rsi,r14
  400526:	44 89 ef             	mov    edi,r13d
  400529:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  40052d:	48 83 c3 01          	add    rbx,0x1
  400531:	48 39 dd             	cmp    rbp,rbx
  400534:	75 ea                	jne    400520 <__libc_csu_init+0x40>
  400536:	48 83 c4 08          	add    rsp,0x8
  40053a:	5b                   	pop    rbx
  40053b:	5d                   	pop    rbp
  40053c:	41 5c                	pop    r12
  40053e:	41 5d                	pop    r13
  400540:	41 5e                	pop    r14
  400542:	41 5f                	pop    r15
  400544:	c3                   	ret    
  400545:	90                   	nop
  400546:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40054d:	00 00 00 

0000000000400550 <__libc_csu_fini>:
  400550:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000400554 <_fini>:
  400554:	48 83 ec 08          	sub    rsp,0x8
  400558:	48 83 c4 08          	add    rsp,0x8
  40055c:	c3                   	ret    

Disassembly of section .rodata:

0000000000400560 <_IO_stdin_used>:
  400560:	01 00                	add    DWORD PTR [rax],eax
  400562:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .eh_frame_hdr:

0000000000400564 <__GNU_EH_FRAME_HDR>:
  400564:	01 1b                	add    DWORD PTR [rbx],ebx
  400566:	03 3b                	add    edi,DWORD PTR [rbx]
  400568:	38 00                	cmp    BYTE PTR [rax],al
  40056a:	00 00                	add    BYTE PTR [rax],al
  40056c:	06                   	(bad)  
  40056d:	00 00                	add    BYTE PTR [rax],al
  40056f:	00 4c fe ff          	add    BYTE PTR [rsi+rdi*8-0x1],cl
  400573:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  400577:	00 7c fe ff          	add    BYTE PTR [rsi+rdi*8-0x1],bh
  40057b:	ff 80 00 00 00 33    	inc    DWORD PTR [rax+0x33000000]
  400581:	ff                   	(bad)  
  400582:	ff                   	(bad)  
  400583:	ff 94 00 00 00 58 ff 	call   QWORD PTR [rax+rax*1-0xa80000]
  40058a:	ff                   	(bad)  
  40058b:	ff b4 00 00 00 7c ff 	push   QWORD PTR [rax+rax*1-0x840000]
  400592:	ff                   	(bad)  
  400593:	ff d4                	call   rsp
  400595:	00 00                	add    BYTE PTR [rax],al
  400597:	00 ec                	add    ah,ch
  400599:	ff                   	(bad)  
  40059a:	ff                   	(bad)  
  40059b:	ff 1c 01             	call   FWORD PTR [rcx+rax*1]
	...

Disassembly of section .eh_frame:

00000000004005a0 <__FRAME_END__-0xf4>:
  4005a0:	14 00                	adc    al,0x0
  4005a2:	00 00                	add    BYTE PTR [rax],al
  4005a4:	00 00                	add    BYTE PTR [rax],al
  4005a6:	00 00                	add    BYTE PTR [rax],al
  4005a8:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4005ab:	00 01                	add    BYTE PTR [rcx],al
  4005ad:	78 10                	js     4005bf <__GNU_EH_FRAME_HDR+0x5b>
  4005af:	01 1b                	add    DWORD PTR [rbx],ebx
  4005b1:	0c 07                	or     al,0x7
  4005b3:	08 90 01 07 10 10    	or     BYTE PTR [rax+0x10100701],dl
  4005b9:	00 00                	add    BYTE PTR [rax],al
  4005bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4005be:	00 00                	add    BYTE PTR [rax],al
  4005c0:	f0 fd                	lock std 
  4005c2:	ff                   	(bad)  
  4005c3:	ff 2b                	jmp    FWORD PTR [rbx]
  4005c5:	00 00                	add    BYTE PTR [rax],al
  4005c7:	00 00                	add    BYTE PTR [rax],al
  4005c9:	00 00                	add    BYTE PTR [rax],al
  4005cb:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  4005ce:	00 00                	add    BYTE PTR [rax],al
  4005d0:	00 00                	add    BYTE PTR [rax],al
  4005d2:	00 00                	add    BYTE PTR [rax],al
  4005d4:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4005d7:	00 01                	add    BYTE PTR [rcx],al
  4005d9:	78 10                	js     4005eb <__GNU_EH_FRAME_HDR+0x87>
  4005db:	01 1b                	add    DWORD PTR [rbx],ebx
  4005dd:	0c 07                	or     al,0x7
  4005df:	08 90 01 00 00 10    	or     BYTE PTR [rax+0x10000001],dl
  4005e5:	00 00                	add    BYTE PTR [rax],al
  4005e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4005ea:	00 00                	add    BYTE PTR [rax],al
  4005ec:	f4                   	hlt    
  4005ed:	fd                   	std    
  4005ee:	ff                   	(bad)  
  4005ef:	ff 02                	inc    DWORD PTR [rdx]
  4005f1:	00 00                	add    BYTE PTR [rax],al
  4005f3:	00 00                	add    BYTE PTR [rax],al
  4005f5:	00 00                	add    BYTE PTR [rax],al
  4005f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4005fa:	00 00                	add    BYTE PTR [rax],al
  4005fc:	30 00                	xor    BYTE PTR [rax],al
  4005fe:	00 00                	add    BYTE PTR [rax],al
  400600:	97                   	xchg   edi,eax
  400601:	fe                   	(bad)  
  400602:	ff                   	(bad)  
  400603:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 400609 <__GNU_EH_FRAME_HDR+0xa5>
  400609:	41 0e                	rex.B (bad) 
  40060b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400611:	60                   	(bad)  
  400612:	0c 07                	or     al,0x7
  400614:	08 00                	or     BYTE PTR [rax],al
  400616:	00 00                	add    BYTE PTR [rax],al
  400618:	1c 00                	sbb    al,0x0
  40061a:	00 00                	add    BYTE PTR [rax],al
  40061c:	50                   	push   rax
  40061d:	00 00                	add    BYTE PTR [rax],al
  40061f:	00 9c fe ff ff 17 00 	add    BYTE PTR [rsi+rdi*8+0x17ffff],bl
  400626:	00 00                	add    BYTE PTR [rax],al
  400628:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40062b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400631:	52                   	push   rdx
  400632:	0c 07                	or     al,0x7
  400634:	08 00                	or     BYTE PTR [rax],al
  400636:	00 00                	add    BYTE PTR [rax],al
  400638:	44 00 00             	add    BYTE PTR [rax],r8b
  40063b:	00 70 00             	add    BYTE PTR [rax+0x0],dh
  40063e:	00 00                	add    BYTE PTR [rax],al
  400640:	a0 fe ff ff 65 00 00 	movabs al,ds:0x65fffffe
  400647:	00 00 
  400649:	42 0e                	rex.X (bad) 
  40064b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  400651:	8e 03                	mov    es,WORD PTR [rbx]
  400653:	45 0e                	rex.RB (bad) 
  400655:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  40065b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff867014a9 <_end+0xffffffff86100479>
  400661:	06                   	(bad)  
  400662:	48 0e                	rex.W (bad) 
  400664:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40066a:	72 0e                	jb     40067a <__GNU_EH_FRAME_HDR+0x116>
  40066c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40066f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  400672:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  400675:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  400678:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40067b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40067e:	08 00                	or     BYTE PTR [rax],al
  400680:	10 00                	adc    BYTE PTR [rax],al
  400682:	00 00                	add    BYTE PTR [rax],al
  400684:	b8 00 00 00 c8       	mov    eax,0xc8000000
  400689:	fe                   	(bad)  
  40068a:	ff                   	(bad)  
  40068b:	ff 02                	inc    DWORD PTR [rdx]
  40068d:	00 00                	add    BYTE PTR [rax],al
  40068f:	00 00                	add    BYTE PTR [rax],al
  400691:	00 00                	add    BYTE PTR [rax],al
	...

0000000000400694 <__FRAME_END__>:
  400694:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000600e50 <__frame_dummy_init_array_entry>:
  600e50:	90                   	nop
  600e51:	04 40                	add    al,0x40
  600e53:	00 00                	add    BYTE PTR [rax],al
  600e55:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000600e58 <__do_global_dtors_aux_fini_array_entry>:
  600e58:	60                   	(bad)  
  600e59:	04 40                	add    al,0x40
  600e5b:	00 00                	add    BYTE PTR [rax],al
  600e5d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000600e60 <_DYNAMIC>:
  600e60:	01 00                	add    DWORD PTR [rax],eax
  600e62:	00 00                	add    BYTE PTR [rax],al
  600e64:	00 00                	add    BYTE PTR [rax],al
  600e66:	00 00                	add    BYTE PTR [rax],al
  600e68:	01 00                	add    DWORD PTR [rax],eax
  600e6a:	00 00                	add    BYTE PTR [rax],al
  600e6c:	00 00                	add    BYTE PTR [rax],al
  600e6e:	00 00                	add    BYTE PTR [rax],al
  600e70:	0c 00                	or     al,0x0
  600e72:	00 00                	add    BYTE PTR [rax],al
  600e74:	00 00                	add    BYTE PTR [rax],al
  600e76:	00 00                	add    BYTE PTR [rax],al
  600e78:	90                   	nop
  600e79:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600e7c:	00 00                	add    BYTE PTR [rax],al
  600e7e:	00 00                	add    BYTE PTR [rax],al
  600e80:	0d 00 00 00 00       	or     eax,0x0
  600e85:	00 00                	add    BYTE PTR [rax],al
  600e87:	00 54 05 40          	add    BYTE PTR [rbp+rax*1+0x40],dl
  600e8b:	00 00                	add    BYTE PTR [rax],al
  600e8d:	00 00                	add    BYTE PTR [rax],al
  600e8f:	00 19                	add    BYTE PTR [rcx],bl
  600e91:	00 00                	add    BYTE PTR [rax],al
  600e93:	00 00                	add    BYTE PTR [rax],al
  600e95:	00 00                	add    BYTE PTR [rax],al
  600e97:	00 50 0e             	add    BYTE PTR [rax+0xe],dl
  600e9a:	60                   	(bad)  
  600e9b:	00 00                	add    BYTE PTR [rax],al
  600e9d:	00 00                	add    BYTE PTR [rax],al
  600e9f:	00 1b                	add    BYTE PTR [rbx],bl
  600ea1:	00 00                	add    BYTE PTR [rax],al
  600ea3:	00 00                	add    BYTE PTR [rax],al
  600ea5:	00 00                	add    BYTE PTR [rax],al
  600ea7:	00 08                	add    BYTE PTR [rax],cl
  600ea9:	00 00                	add    BYTE PTR [rax],al
  600eab:	00 00                	add    BYTE PTR [rax],al
  600ead:	00 00                	add    BYTE PTR [rax],al
  600eaf:	00 1a                	add    BYTE PTR [rdx],bl
  600eb1:	00 00                	add    BYTE PTR [rax],al
  600eb3:	00 00                	add    BYTE PTR [rax],al
  600eb5:	00 00                	add    BYTE PTR [rax],al
  600eb7:	00 58 0e             	add    BYTE PTR [rax+0xe],bl
  600eba:	60                   	(bad)  
  600ebb:	00 00                	add    BYTE PTR [rax],al
  600ebd:	00 00                	add    BYTE PTR [rax],al
  600ebf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  600ec2:	00 00                	add    BYTE PTR [rax],al
  600ec4:	00 00                	add    BYTE PTR [rax],al
  600ec6:	00 00                	add    BYTE PTR [rax],al
  600ec8:	08 00                	or     BYTE PTR [rax],al
  600eca:	00 00                	add    BYTE PTR [rax],al
  600ecc:	00 00                	add    BYTE PTR [rax],al
  600ece:	00 00                	add    BYTE PTR [rax],al
  600ed0:	f5                   	cmc    
  600ed1:	fe                   	(bad)  
  600ed2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600ed5:	00 00                	add    BYTE PTR [rax],al
  600ed7:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  600edd:	00 00                	add    BYTE PTR [rax],al
  600edf:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 600ee5 <_DYNAMIC+0x85>
  600ee5:	00 00                	add    BYTE PTR [rax],al
  600ee7:	00 00                	add    BYTE PTR [rax],al
  600ee9:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  600eec:	00 00                	add    BYTE PTR [rax],al
  600eee:	00 00                	add    BYTE PTR [rax],al
  600ef0:	06                   	(bad)  
  600ef1:	00 00                	add    BYTE PTR [rax],al
  600ef3:	00 00                	add    BYTE PTR [rax],al
  600ef5:	00 00                	add    BYTE PTR [rax],al
  600ef7:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  600efd:	00 00                	add    BYTE PTR [rax],al
  600eff:	00 0a                	add    BYTE PTR [rdx],cl
  600f01:	00 00                	add    BYTE PTR [rax],al
  600f03:	00 00                	add    BYTE PTR [rax],al
  600f05:	00 00                	add    BYTE PTR [rax],al
  600f07:	00 38                	add    BYTE PTR [rax],bh
  600f09:	00 00                	add    BYTE PTR [rax],al
  600f0b:	00 00                	add    BYTE PTR [rax],al
  600f0d:	00 00                	add    BYTE PTR [rax],al
  600f0f:	00 0b                	add    BYTE PTR [rbx],cl
  600f11:	00 00                	add    BYTE PTR [rax],al
  600f13:	00 00                	add    BYTE PTR [rax],al
  600f15:	00 00                	add    BYTE PTR [rax],al
  600f17:	00 18                	add    BYTE PTR [rax],bl
  600f19:	00 00                	add    BYTE PTR [rax],al
  600f1b:	00 00                	add    BYTE PTR [rax],al
  600f1d:	00 00                	add    BYTE PTR [rax],al
  600f1f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 600f25 <_DYNAMIC+0xc5>
	...
  600f2d:	00 00                	add    BYTE PTR [rax],al
  600f2f:	00 07                	add    BYTE PTR [rdi],al
  600f31:	00 00                	add    BYTE PTR [rax],al
  600f33:	00 00                	add    BYTE PTR [rax],al
  600f35:	00 00                	add    BYTE PTR [rax],al
  600f37:	00 60 03             	add    BYTE PTR [rax+0x3],ah
  600f3a:	40 00 00             	add    BYTE PTR [rax],al
  600f3d:	00 00                	add    BYTE PTR [rax],al
  600f3f:	00 08                	add    BYTE PTR [rax],cl
  600f41:	00 00                	add    BYTE PTR [rax],al
  600f43:	00 00                	add    BYTE PTR [rax],al
  600f45:	00 00                	add    BYTE PTR [rax],al
  600f47:	00 30                	add    BYTE PTR [rax],dh
  600f49:	00 00                	add    BYTE PTR [rax],al
  600f4b:	00 00                	add    BYTE PTR [rax],al
  600f4d:	00 00                	add    BYTE PTR [rax],al
  600f4f:	00 09                	add    BYTE PTR [rcx],cl
  600f51:	00 00                	add    BYTE PTR [rax],al
  600f53:	00 00                	add    BYTE PTR [rax],al
  600f55:	00 00                	add    BYTE PTR [rax],al
  600f57:	00 18                	add    BYTE PTR [rax],bl
  600f59:	00 00                	add    BYTE PTR [rax],al
  600f5b:	00 00                	add    BYTE PTR [rax],al
  600f5d:	00 00                	add    BYTE PTR [rax],al
  600f5f:	00 fe                	add    dh,bh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f65:	00 00                	add    BYTE PTR [rax],al
  600f67:	00 40 03             	add    BYTE PTR [rax+0x3],al
  600f6a:	40 00 00             	add    BYTE PTR [rax],al
  600f6d:	00 00                	add    BYTE PTR [rax],al
  600f6f:	00 ff                	add    bh,bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f75:	00 00                	add    BYTE PTR [rax],al
  600f77:	00 01                	add    BYTE PTR [rcx],al
  600f79:	00 00                	add    BYTE PTR [rax],al
  600f7b:	00 00                	add    BYTE PTR [rax],al
  600f7d:	00 00                	add    BYTE PTR [rax],al
  600f7f:	00 f0                	add    al,dh
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  600f85:	00 00                	add    BYTE PTR [rax],al
  600f87:	00 38                	add    BYTE PTR [rax],bh
  600f89:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	60                   	(bad)  
  601001:	0e                   	(bad)  
  601002:	60                   	(bad)  
	...

Disassembly of section .data:

0000000000601018 <__data_start>:
	...

0000000000601020 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601028 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400318>
   a:	74 75                	je     81 <_init-0x40030f>
   c:	20 37                	and    BYTE PTR [rdi],dh
   e:	2e 34 2e             	cs xor al,0x2e
  11:	30 2d 31 75 62 75    	xor    BYTE PTR [rip+0x75627531],ch        # 75627548 <_end+0x75026518>
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400301>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	38 2e                	cmp    BYTE PTR [rsi],ch
  1f:	30 34 2e             	xor    BYTE PTR [rsi+rbp*1],dh
  22:	31 29                	xor    DWORD PTR [rcx],ebp
  24:	20 37                	and    BYTE PTR [rdi],dh
  26:	2e 34 2e             	cs xor al,0x2e
  29:	30 00                	xor    BYTE PTR [rax],al
